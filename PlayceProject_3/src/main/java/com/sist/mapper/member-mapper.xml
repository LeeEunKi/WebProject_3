<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sist.mapper.member-mapper">
<!-- 아이디 중복체크 -->
<select id="memberIdCheck" resultType="int" parameterType="String">
 SELECT COUNT(*) FROM member_3
 WHERE id=#{id}
</select>
<!-- 이메일 중복체크 -->
<select id="memberEmailCheck" resultType="int" parameterType="String">
 SELECT COUNT(*) FROM member_3
 WHERE email=#{email}
</select>
<!-- 회원가입 -->
<insert id="memberInsert" parameterType="MemberVO">
  INSERT INTO member_3(id,pwd,name,sex,email,post,addr1,addr2,tel)
  VALUES(
  #{id},
  #{pwd},
  #{name},
  #{sex},
  #{email},
  #{post},
  #{addr1},
  #{addr2},
  #{tel}
  )
</insert>

<!-- 로그인 처리 -->
<!-- 아이디 존재여부 확인(0/1) -->
<select id="memberIdCount" resultType="int" parameterType="string">
 SELECT COUNT(*)
 FROM member_3
 WHERE id=#{id}
</select>
<!-- 회원정보가져오기 -->
<select id="memberInfoData" resultType="MemberVO" parameterType="string">
  SELECT *
  FROM member_3
  WHERE id=#{id}
</select>
<!-- [관리자] 모든 회원목록가져오기 -->
<select id="memberListData" resultType="MemberVO" parameterType="hashmap">
  SELECT id,name,sex,email,post,addr1,addr2,tel,num 
  FROM (SELECT id,name,sex,email,post,addr1,addr2,tel,rownum as num
  FROM (SELECT id,name,sex,email,post,addr1,addr2,tel
  FROM member_3 WHERE admin='n'))  
  WHERE num BETWEEN #{start} AND #{end}
</select>
<!-- [관리자] 총 회원수 -->
<select id="memberTotalCount" resultType="int">
  SELECT COUNT(*)
  FROM member_3
  WHERE admin='n'
</select>
<!-- [관리자] 회원 아이디 검색 -->
<select id="memberFindID" resultType="MemberVO" parameterType="string">
  SELECT id,name,sex,email,post,addr1,addr2,tel 
  FROM member_3
  WHERE id LIKE '%'||#{fd}||'%' AND admin='n'
</select>
<!-- 아이디/비밀번호 찾기 -->
 <select id="memberNameCount" resultType="int" parameterType="string">
  SELECT COUNT(*) FROM member_3
  WHERE name=#{name}
 </select>
 <select id="memberGetEmail" resultType="string" parameterType="string">
  SELECT email FROM member_3
  WHERE name=#{name}
 </select>
 <select id="emailIdFind" resultType="string" parameterType="hashmap">
  SELECT RPAD(SUBSTR(id,1,LENGTH(id)-2),LENGTH(id),'*') FROM member_3
  WHERE name=#{name} AND email = #{email}
 </select>
 <select id="emailPwdFind" resultType="string" parameterType="hashmap">
  SELECT RPAD(SUBSTR(pwd,1,LENGTH(pwd)-2),LENGTH(pwd),'*') FROM member_3
  WHERE name=#{name} AND email = #{email}
 </select>
 
 
 <!-- 회원수정 -->
 <update id="memberUpdate" parameterType="MemberVO">
   UPDATE member_3 SET
   email=#{email},addr1=#{addr1},addr2=#{addr2},tel=#{tel}
   WHERE id=#{id}
 </update>
 
 <!-- 회원탈퇴 -->
<delete id="memberDelete" parameterType="string">
 DELETE FROM member_3
 WHERE id=#{id}
</delete>

</mapper>